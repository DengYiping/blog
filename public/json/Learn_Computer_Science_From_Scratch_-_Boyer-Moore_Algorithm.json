{"date": "2018-08-05 21:13", "md": "There are a lot of efficient string search (pattern matching) algorithm in the world, and Boyer-Moore algorithm is one of those algorithm commonly used in  finding long pattern in a longer string.\n\nProbably, the most simple algorithm is called Naive Pattern Searching Algorithm:\n\n1.  Match every character in the pattern and the corresponding position in the string. If all the characters match, return the resulting position.\n2.  If there is a mismatch, simply move the pattern by 1 character.\n3.  Repeat the process until the pattern hit the end of the algorithm.\nHowever, the algorithm is not efficient. In most of the case, the algorithm takes \u0398(nm).\n\nIn Boyer-Moore algorithm, instead of comparing from the left to the right, it compares from the right to the left.\n\nThen two rules apply when a mismatch happens:\n\n*   Bad character rule:\nIf a mismatch happens on pattern position **_p_** and pattern's first character is at position**_ i _**, the mismatched character is at **_(p + i)_**. If the mismatched character appears on the left side of mismatched character, move the pattern so that the character are in the same position, and repeat the process of matching. If not, simply move the entire pattern by the length of pattern.\n\n![](/img/Screen-Shot-2017-09-17-at-7.13.58-PM-300x138.png)\n\n*   Good suffix rule: If a mismatch happens, some continuous behind the mismatch (called suffix) appears in front of mismatch position (prefix), move so that the prefix and suffix part meet.\n![](/img/Screen-Shot-2017-09-17-at-7.37.48-PM-300x119.png)\n\nBoyer-Moore Algorithm is a simple combination of these two rules, and each step will move at least 1 step. If one rule skip more step, apply the rule.", "title": "Learn Computer Science From Scratch - Boyer-Moore Algorithm"}